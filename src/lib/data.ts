export interface Lead {
  "Address 1": string;
  "Address 2": string;
  "Agent Email": string;
  "Agent Extension": string;
  "Agent First Name": string;
  "Agent ID": string;
  "Agent Last Name": string;
  "Agent Name": string;
  "Alternate Number to Dial": string;
  "Application Status": string;
  "Appointment Date & Time": string;
  "Audio Quality": string;
  "Bad MCA Lead Reason": string;
  "Banking Institution": string;
  "Bill Time": string;
  "Business Start Date": string;
  "Call Count Inbound": string;
  "Call Count Outbound": string;
  "Call Log ID": string;
  "Call Type": string;
  "Called Since Last Reset": string;
  "Caller ID": string;
  "Campaign ID": string;
  "Campaign Name": string;
  "Campaign Type": string;
  "Carrier Name": string;
  "Carrier Type": string;
  "Cell Phone": string;
  City: string;
  Comment: string;
  "Company DBA": string;
  "Company Description (Primary)": string;
  "Company Name": string;
  "Company Website": string;
  "Contact Type": string;
  Cost: string;
  Country: string;
  "Country Code": string;
  "Created At (Time)": string;
  "Created By": string;
  "Credit Score": string;
  "Credit Score Range": string;
  "Data Provider": string;
  "Data Type": string;
  "Date and Hour": string;
  "Date Of Birth": string;
  "Day of Month": string;
  "Day of Week": string;
  "Dial Attempts": string;
  "Drive Folder": string;
  Email: string;
  "Email #2 (if needed)": string;
  "Email Delivered": string;
  "End Epoch": string;
  FEIN: string;
  "Final Reached At": string;
  "First Contacted At": string;
  "First Dialed At": string;
  "First Name": string;
  Gender: string;
  "GMT Offset Now": string;
  Hour: string;
  "HubSpot Company Record ID": string;
  "HubSpot Contact Record ID": string;
  "Industry (Specific)": string;
  "Last Called (PST)": string;
  "Last Modified By": string;
  "Last Modify": string;
  "Last Name": string;
  "Last Reached At": string;
  "Last Viewed": string;
  "Lead ID": string;
  "Lead Info": string;
  "Lead Owner": string;
  "Lead Source": string;
  "Lead Status": string;
  "Liens | Judgements | Prior Defaults": string;
  "Lifecycle Stage": string;
  List: string;
  "List Name": string;
  "Main Industry": string;
  Month: string;
  "Monthly Revenue (Estimated)": string;
  "Monthly Revenue (no_longer_used)": string;
  "MQS Transfer Rep": string;
  "No Contact Call Counter": string;
  "Not Interested Reasons": string;
  Notes: string;
  "Number of Open Positions": string;
  "Off The Wall Question": string;
  "Off The Wall Question Answer": string;
  "Open Postions": string;
  "Ownership %": string;
  "Phone #2 (if needed)": string;
  "Phone 3": string;
  "Postal Code": string;
  "Primary Phone": string;
  Province: string;
  "Qualified - Email App Out": string;
  "Queue ID": string;
  "Queue Name": string;
  "Queue Wait Time": string;
  "Record Source": string;
  Recordings: string;
  "Request Funding Amount": string;
  "Script Data": string;
  "Security Phrase": string;
  "Send App Email": string;
  "Session ID": string;
  "Source Id": string;
  "Source Name": string;
  "Speed to Contact": string;
  "Speed to Contact (Secs)": string;
  "Speed to Contact Net Time": string;
  "Speed to Lead": string;
  "Speed to Lead (Secs)": string;
  "Speed to Lead Net Time": string;
  "SSN*": string;
  "Start Epoch": string;
  State: string;
  "StateTracker Block Expires": string;
  "StateTracker Blocked": string;
  Status: string;
  "Status Name": string;
  "Talk Time": string;
  "Termination Reason": string;
  Time: string;
  "Time Stamp (PST)": string;
  "Timeline | Urgency": string;
  Title: string;
  "Use of Funds": string;
  "Vendor Code": string;
  "Work Phone": string;
  "Wrap-up Time": string;
  Year: string;
}

export async function getLeadData(): Promise<Lead[]> {
  try {
    const response = await fetch("/data/lead_export_convoso.json");
    if (!response.ok) {
      throw new Error(`HTTP error! status: ${response.status}`);
    }
    const data = await response.json();
    return data as Lead[];
  } catch (error) {
    console.error("Failed to fetch lead data:", error);
    return []; // Return an empty array in case of an error
  }
}

